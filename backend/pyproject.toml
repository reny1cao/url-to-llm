[tool.poetry]
name = "url-to-llm-backend"
version = "0.1.0"
description = "FastAPI backend with MCP server for URL to LLM"
authors = ["URL to LLM Team"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
asyncpg = "^0.29.0"
aioboto3 = "^12.1.0"
redis = "^5.0.1"
httpx = "^0.26.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
authlib = "^1.3.0"
itsdangerous = "^2.1.2"
structlog = "^24.1.0"
python-dotenv = "^1.0.0"
slowapi = "^0.1.9"
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
opentelemetry-instrumentation-fastapi = "^0.43b0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-env = "^1.1.3"
black = "^23.12.1"
ruff = "^0.1.11"
mypy = "^1.8.0"
httpx = "^0.26.0"
pre-commit = "^3.6.0"
types-redis = "^4.6.0"
types-passlib = "^1.7.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]  # Ignore line too long

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
env = [
    "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db",
    "REDIS_URL=redis://localhost:6379",
    "S3_ENDPOINT=http://localhost:9000",
    "S3_ACCESS_KEY=minioadmin",
    "S3_SECRET_KEY=minioadmin",
    "S3_BUCKET=test-bucket",
    "CDN_URL=http://localhost:9000/test-bucket",
    "SECRET_KEY=test-secret-key",
    "OAUTH_CLIENT_ID=test-client",
    "OAUTH_CLIENT_SECRET=test-secret",
    "ENVIRONMENT=test"
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101"]