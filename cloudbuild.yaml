# Cloud Build configuration for URL-to-LLM
# This builds and deploys both backend and frontend to Cloud Run

steps:
  # Build backend image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/url-to-llm-backend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/url-to-llm-backend:latest',
      '-f', 'backend/Dockerfile.cloudrun',
      './backend'
    ]
    id: 'build-backend'

  # Build frontend image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/url-to-llm-frontend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/url-to-llm-frontend:latest',
      '-f', 'frontend/Dockerfile.cloudrun',
      '--build-arg', 'NEXT_PUBLIC_API_URL=https://api-${_SERVICE_NAME}-${_REGION}-${PROJECT_ID}.a.run.app',
      './frontend'
    ]
    id: 'build-frontend'

  # Push backend image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/url-to-llm-backend:$COMMIT_SHA']
    wait_for: ['build-backend']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/url-to-llm-backend:latest']
    wait_for: ['build-backend']

  # Push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/url-to-llm-frontend:$COMMIT_SHA']
    wait_for: ['build-frontend']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/url-to-llm-frontend:latest']
    wait_for: ['build-frontend']

  # Run database migrations
  - name: 'gcr.io/google-appengine/exec-wrapper'
    args: [
      '-i', 'gcr.io/$PROJECT_ID/url-to-llm-backend:$COMMIT_SHA',
      '-s', '${_DB_CONNECTION_NAME}',
      '-e', 'DATABASE_URL=${_DATABASE_URL}',
      '--', 'alembic', 'upgrade', 'head'
    ]

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'api-${_SERVICE_NAME}',
      '--image', 'gcr.io/$PROJECT_ID/url-to-llm-backend:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--add-cloudsql-instances', '${_DB_CONNECTION_NAME}',
      '--set-env-vars', 'INSTANCE_CONNECTION_NAME=${_DB_CONNECTION_NAME}',
      '--set-secrets', 'DATABASE_URL=${_DATABASE_SECRET}:latest,SECRET_KEY=${_SECRET_KEY}:latest,REDIS_URL=${_REDIS_URL}:latest,GCS_BUCKET=${_GCS_BUCKET}:latest',
      '--service-account', '${_SERVICE_ACCOUNT}',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '900',
      '--concurrency', '100',
      '--min-instances', '1',
      '--max-instances', '10'
    ]

  # Deploy frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'web-${_SERVICE_NAME}',
      '--image', 'gcr.io/$PROJECT_ID/url-to-llm-frontend:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '512Mi',
      '--cpu', '1',
      '--timeout', '60',
      '--concurrency', '100',
      '--min-instances', '1',
      '--max-instances', '5'
    ]

substitutions:
  _SERVICE_NAME: url-to-llm
  _REGION: us-central1
  _DB_CONNECTION_NAME: ${PROJECT_ID}:${_REGION}:url-to-llm-db
  _DATABASE_SECRET: database-url
  _SECRET_KEY: secret-key
  _REDIS_URL: redis-url
  _GCS_BUCKET: gcs-bucket
  _SERVICE_ACCOUNT: url-to-llm@${PROJECT_ID}.iam.gserviceaccount.com

timeout: 1800s